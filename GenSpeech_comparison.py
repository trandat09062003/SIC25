# ============================================
# PH∆Ø∆†NG PH√ÅP 1: S·ª≠ d·ª•ng tr·ª±c ti·∫øp Bark Model
# ============================================

from transformers import AutoProcessor, BarkModel
import scipy.io.wavfile as wavfile
import numpy as np

def method1_direct_bark():
    """C√°c ph∆∞∆°ng ph√°p gen audio b·∫±ng bark"""
    """Ph∆∞∆°ng ph√°p 1: S·ª≠ d·ª•ng tr·ª±c ti·∫øp Bark model"""
    print("=== PH∆Ø∆†NG PH√ÅP 1: Direct Bark Model ===")
    
    # Load model v√† processor
    processor = AutoProcessor.from_pretrained("suno/bark")
    model = BarkModel.from_pretrained("suno/bark")
    
    # C·∫•u h√¨nh voice
    voice_preset = "v2/en_speaker_6"
    
    # Text input
    text = "Hello, My name is Dat, I am 22, I am a student at Hanoi university of science and technology"
    
    # X·ª≠ l√Ω text
    inputs = processor(text, voice_preset=voice_preset)
    
    # Sinh audio
    audio_array = model.generate(**inputs)
    audio_array = audio_array.cpu().numpy().squeeze()
    
    # L∆∞u file
    sample_rate = 24000
    wavfile.write("output_method1.wav", sample_rate, audio_array)
    
    print(f"‚úÖ Audio saved: output_method1.wav")
    print(f"üìù Text: {text}")
    print(f"üé§ Voice: {voice_preset}")
    print(f"üìä Audio shape: {audio_array.shape}")
    print(f"üîä Sample rate: {sample_rate} Hz")
    print()

# ============================================
# PH∆Ø∆†NG PH√ÅP 2: S·ª≠ d·ª•ng function wrapper
# ============================================

def generate_audio(text_prompt, voice_preset="v2/en_speaker_6"):
    """Ph∆∞∆°ng ph√°p 2: Function wrapper cho Bark"""
    print("=== PH∆Ø∆†NG PH√ÅP 2: Function Wrapper ===")
    
    # Load model (c√≥ th·ªÉ cache ƒë·ªÉ t√°i s·ª≠ d·ª•ng)
    processor = AutoProcessor.from_pretrained("suno/bark")
    model = BarkModel.from_pretrained("suno/bark")
    
    # X·ª≠ l√Ω text v·ªõi music notation
    inputs = processor(text_prompt, voice_preset=voice_preset)
    
    # Sinh audio
    audio_array = model.generate(**inputs)
    audio_array = audio_array.cpu().numpy().squeeze()
    
    return audio_array

def method2_function_wrapper():
    """Demo ph∆∞∆°ng ph√°p 2"""
    # Text v·ªõi music notation
    text_prompt = """
    ‚ô™ In the jungle, the mighty jungle, the lion barks tonight ‚ô™
    """
    
    # Sinh audio
    audio_array = generate_audio(text_prompt)
    
    # L∆∞u file
    sample_rate = 24000
    wavfile.write("output_method2.wav", sample_rate, audio_array)
    
    print(f"‚úÖ Audio saved: output_method2.wav")
    print(f"üìù Text: {text_prompt.strip()}")
    print(f"üéµ Music notation: ‚ô™ ‚ô™")
    print(f"üìä Audio shape: {audio_array.shape}")
    print(f"üîä Sample rate: {sample_rate} Hz")
    print()

# ============================================
# PH∆Ø∆†NG PH√ÅP 3: Advanced v·ªõi nhi·ªÅu voice
# ============================================

def method3_advanced_features():
    """Ph∆∞∆°ng ph√°p 3: Advanced features"""
    print("=== PH∆Ø∆†NG PH√ÅP 3: Advanced Features ===")
    
    processor = AutoProcessor.from_pretrained("suno/bark")
    model = BarkModel.from_pretrained("suno/bark")
    
    # Danh s√°ch voice presets
    voice_presets = [
        "v2/en_speaker_6",    # Female voice
        "v2/en_speaker_9",    # Male voice  
        "v2/en_speaker_0",    # Another voice
    ]
    
    # Text v·ªõi nhi·ªÅu lo·∫°i
    texts = [
        "Hello, this is a normal conversation.",
        "‚ô™ Let's sing a beautiful song together ‚ô™",
        "[LAUGHTER] That was funny! [LAUGHTER]"
    ]
    
    for i, (text, voice) in enumerate(zip(texts, voice_presets)):
        inputs = processor(text, voice_preset=voice)
        audio_array = model.generate(**inputs)
        audio_array = audio_array.cpu().numpy().squeeze()
        
        filename = f"output_method3_voice_{i+1}.wav"
        wavfile.write(filename, 24000, audio_array)
        
        print(f"‚úÖ {filename} - Voice: {voice}")
        print(f"üìù Text: {text[:50]}...")
        print()

# ============================================
# CH·∫†Y T·∫§T C·∫¢ PH∆Ø∆†NG PH√ÅP
# ============================================

if __name__ == "__main__":
    print("üöÄ B·∫ÆT ƒê·∫¶U SO S√ÅNH C√ÅC PH∆Ø∆†NG PH√ÅP TEXT-TO-SPEECH")
    print("=" * 60)
    
    # Ch·∫°y t·ª´ng ph∆∞∆°ng ph√°p
    method1_direct_bark()
    method2_function_wrapper()
    method3_advanced_features()
    
    print("\nüéâ HO√ÄN TH√ÄNH! Ki·ªÉm tra c√°c file .wav ƒë∆∞·ª£c t·∫°o ra.") 